openapi: 3.0.0
info:
  title: ms-feedbacks
  description: API Description
  version: 1.0.0
servers:
  - url: http://localhost:8100
paths:
  /feedbacks:
    get:
      summary: Retrieve all feedbacks
      description: Returns all available feedbacks.
      responses:
        '200':
          description: Success. Returns a list of feedbacks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedbackModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      summary: Create feedbacks
      description: Create feedbacks if the order ID exists in the database and the order isn't canceled.
      responses:
        '201':
          description: Feedback created
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Order canceled status
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Order_id doesn't exist in the database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

components:
  schemas:
    FeedbackModel:
      type: object
      properties:
        id:
          type: integer
        scale:
          type: string
        comment:
          type: string
        order_id:
          type: integer
    FeedbackResponseDTO:
      type: object
      properties:
        id:
          type: integer
        scale:
          type: string
        comment:
          type: string
        order_id:
          type: integer
    NotFound:
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
    InternalServerError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        status:
          type: string
        message:
          type: string
        /feedbacks/{id}:
          get:
            summary: Get a feedback by ID
            description: Retrieves a feedback by its unique ID.
           parameters:
              - in: path
               name: id
               required: true
               schema:
                type: integer
               description: Feedback ID to get.
           responses:
             '200':
               description: Success
               content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackModel'
              example:
                id: 1
                scale: SATISFIED
                comment: this so good
                order_id: 1
        '404':
          description: Feedback not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  status:
                    type: string
                  message:
                    type: string
                example:
                  code: 404
                  status: "404 NOT_FOUND"
                  message: "Feedback with ID {id} not found."

    delete:
      summary: Delete feedback
      description: Deletes an existing feedback.
      parameters:
        - name: id
          in: path
          description: ID of the feedback to be deleted.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Feedback deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackResponseDTO'
        '404':
          description: Feedback not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'