openapi: 3.0.0
info:
  title: ms-orders
  description: Descrição da API
  version: 1.0.0
paths:
  /orders/{id}:
    get:
      summary: Get an order by ID
      description: Retrieves an order by its unique ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Order ID to get.
      responses:
        '200':
          description: Operation carried out successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid order ID.
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
    put:
      summary: Update an order by ID
      description: Updates an existing order by its unique ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Order ID to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: integer
                      quantity:
                        type: integer
                address:
                  type: object
                  properties:
                    street:
                      type: string
                    number:
                      type: string
                    postal_code:
                      type: string
                payment_method:
                  type: string
      responses:
        200:
          description: Operation carried out successfully
          content:
            application/json:
              example:
                products:
                  - product_id: 1
                    quantity: 2
                  - product_id: 2
                    quantity: 2
                address:
                  street: Street name
                  number: 10
                  complement: details
                  city: City name
                  state: State name
                  postal_code: 31333333
                payment_method: PIX
                subtotal_value: 100.00
                discount: 0.5
                total_value: 95.00
                created_date: "2023-07-20T12:00:00Z"
                status: CANCELED
                cancel_reason: "Cancel reason"
                cancel_date: "2023-07-20T12:00:00Z"
        400:
          description: Invalid order data or ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        404:
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /orders:
    post:
      summary: Create a new order
      description: Create a new order with a JSON payload of products and order details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: integer
                        description: The ID of the product.
                      quantity:
                        type: integer
                        description: The quantity of the product.
                address:
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street name.
                    number:
                      type: string
                      description: House or building number.
                    postal_code:
                      type: string
                      description: Postal code.
                payment_method:
                  type: string
                  description: Payment method.
      responses:
        201:
          description: Successfully created order
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        product_id:
                          type: integer
                        quantity:
                          type: integer
                  address:
                    type: object
                    properties:
                      street:
                        type: string
                      number:
                        type: integer
                      complement:
                        type: string
                      city:
                        type: string
                      state:
                        type: string
                      postalCode:
                        type: string
                  payment_method:
                    type: string
                  subtotal_value:
                    type: number
                  discount:
                    type: number
                  total_value:
                    type: number
                  created_date:
                    type: string
                    format: date-time
                  status:
                    type: string
        400:
          description: Invalid order data or request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /orders/{id}/cancel:
    post:
      summary: Cancel an order by ID
      description: This endpoint allows you to cancel an order by its ID.
      parameters:
        - name: id
          in: path
          description: The ID of the order to be canceled.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrderRequestDTO'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              example:
                products:
                  - product_id: 1
                    quantity: 2
                  - product_id: 2
                    quantity: 2
                address:
                  street: Street name
                  number: 10
                  complement: details
                  city: City name
                  state: State name
                  postal_code: 31333333
                payment_method: PIX
                subtotal_value: 100.00
                discount: 0.5
                total_value: 95.00
                created_date: "2023-07-20T12:00:00Z"
                status: CANCELED
                cancel_reason: "Cancel reason"
                cancel_date: "2023-07-20T12:00:00Z"
        400:
          description: Invalid data sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        404:
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        500:
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

components:
  schemas:
    CancelOrderRequestDTO:
      type: object
      properties:
        cancelReason:
          type: string
          description: The reason for canceling the order.

    OrderModel:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the canceled order.

    ErrorModel:
      type: object
      properties:
        code:
          type: integer
        status:
          type: string
        message:
          type: string